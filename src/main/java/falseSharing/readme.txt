1.当多个线程修改在同一个缓存行的两个互相独立的变量时候。会无意中影响彼此的性能：伪共享

在核心1上运行的线程想更新变量X，同时核心2上的线程想要更新变量Y。不幸的是，这两个变量在同一个缓存行中。每个线程都要去竞争缓存行的所有权来更新变量。
如果核心1获得了所有权，缓存子系统将会使核心2中对应的缓存行失效。
当核心2获得了所有权然后执行更新操作，核心1就要使自己对应的缓存行失效。
这会来来回回的经过L3缓存，大大影响了性能

Barrier

内存屏障：CPU指令，让先于这个命令的必须先执行，后于这个命令的必须后执行